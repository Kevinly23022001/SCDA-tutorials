for (i in 3:length(sales_volume)) {
sales_volume[i] = sales_volume[i-1] * 1.5
}
sales_volume <- vector(mode = "integer", length = 100)
sales_volume[1] <- 0
sales_volume[2] <- 5
for (i in 3:length(sales_volume)) {
sales_volume[i] = sales_volume[i-1] * 1.5
}
sales_volume
sales_volume <- vector(mode = integer, length = 100)
sales_volume <- vector(mode = "integer", length = 100)
sales_volume[1] <- 0
sales_volume[2] <- 5
i = 3
while (sales_volume[i-1] <= 100) {
sales_volume[i] = sales_volume[i-1] * 1.5
i = i + 1
}
sales_volume
mat <- matrix(0, nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
mat[i, j] <- j - i
}
}
mat
mat <- matrix(0, nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
mat[i, j] <- j + i
}
}
mat
j + i
mat <- matrix(0, nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
mat[i, j] <- j + i
}
}
mat
mat <- matrix(0, nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
mat[i, j] <- j - i
}
}
mat
data("Airquality")
#Plotting-----------------------------------------------------------------------
df <- airquality
View(df)
plot(df)
plot(airquality)
plot(df$Ozone)
View(df)
View(df)
View(df)
df_wind <- airquality$Wind, airquality$Ozone
df_wind <- airquality$Wind
df_wind <- airquality$Wind
View(df)
df_wind <- airquality$Wind
df_windsolar <- data.frame(airquality$wind, airquality$Temp, airquality$Month)
df_windsolar <- data.frame(wind, temp, month)
wind <- airquality$wind
Temp <- airquality$Temp
Month <- airquality$Month
df_windsolar <- data.frame(wind, temp, month)
wind <- airquality$Wind
Temp <- airquality$Temp
Month <- airquality$Month
df_windsolar <- data.frame(wind, temp, month)
df_windsolar <- data.frame(wind, temp, month)
df_windsolar <- data.frame(wind, Temp, Month)
View(df_windsolar)
plot(airquality)
plot(df)
plot(df)
plot(df$Ozone)
View(df)
barplot(df$Ozone)
hist(df$Ozone)
str(df)
plot(df$Ozone, df$Wind, pch = 16, cex = 2,
col = "blue",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 10, cex = 2,
col = "blue",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 15, cex = 2,
col = "blue",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 01, cex = 2,
col = "blue",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 2, cex = 2,
col = "blue",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 3, cex = 2,
col = "blue",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 4, cex = 2,
col = "blue",
main = "Wind plotted against Ozone"
plot(df$Ozone, df$Wind, pch = 4, cex = 2,
plot(df$Ozone, df$Wind, pch = 5, cex = 2,
col = "blue",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 5, cex = 4,
col = "blue",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 5, cex = 1,
col = "blue",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 16, cex = 1,
col = "blue",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 16, cex = 1,
col = "black",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind")
plot(df$Ozone, df$Wind, pch = 16, cex = 1,
col = "black",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind"),
plot(df$Ozone, df$Wind, pch = 16, cex = 1,
col = "black",
main = "Wind plotted against Ozone",
xlab = "Ozone", ylab = "wind",
log = "xy")
source("~/Desktop/Documents/SCDA tutorials/SCDA exercises.R", echo=TRUE)
source("~/Desktop/Documents/SCDA tutorials/SCDA exercises.R", echo=TRUE)
source("~/Desktop/Documents/SCDA tutorials/SCDA exercises.R", echo=TRUE)
source("~/Desktop/Documents/SCDA tutorials/SCDA exercises.R", echo=TRUE)
abline(lm(df$Wind ~ df$Ozone))
abline(h = 10, col = "purple")
hist(df$Wind)
pdf(file = "histogram_wind_plot.pdf")
hist(df$Wind,
col = "blue",
main = "Wind histogram",
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf")
hist(df$Wind,
col = "blue",
main = "Dung histogram",
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf")
hist(df$Wind,
col = "blue",
main = "Wind histogram",
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf")
hist(df$Wind,
width = 8, height = 6,
col = "blue",
main = "Wind histogram",
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf")
hist(df$Wind,
width = 15, height = 10,
col = "blue",
main = "Wind histogram",
xlab = "frequency", ylab = "Wind")
dev.off()
source("~/Desktop/Documents/SCDA tutorials/SCDA exercises.R", echo=TRUE)
source("~/Desktop/Documents/SCDA tutorials/SCDA exercises.R", echo=TRUE)
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf",
width = 15, height = 10)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
xlab = "frequency", ylab = "Wind")
dev.off()
hist(df$Wind,
col = "blue",
main = "Wind histogram",
break = 2,
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
breaks = 2,
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
breaks = 8,
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
breaks = 20,
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
breaks = 15,
xlab = "frequency", ylab = "Wind")
dev.off()
hist(df$Wind,
col = "blue",
main = "Wind histogram",
breaks = 15,
xlim = c(0,10),
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
breaks = 15,
xlim = c(0,20),
xlab = "frequency", ylab = "Wind")
dev.off()
boxplot(df$Ozone)
boxplot(df$Ozone,
horizontal = TRUE)
boxplot(df$Ozone,
horizontal = FALSE)
boxplot(df$Ozone,
horizontal = TRUE)
boxplot(df$Wind,
horizontal = TRUE,
at = 16,
add = TRUE,
axes = FALSE)
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
breaks = 15,
xlab = "frequency", ylab = "Wind")
boxplot(df$Wind,
horizontal = TRUE,
at = 16,
add = TRUE,
axes = FALSE)
stripchart(df$wind,
add = TRUE,
at = 15)
#save plot to pdf
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind Histogram",
breaks = 15,
xlab = "Wind", ylab = "Frequency")  # Note: xlab and ylab were swapped in your original code
# Add boxplot
boxplot(df$Wind,
horizontal = TRUE,
at = max(df$Wind) * 1.1,  # Assuming at is set to slightly more than the max value of Wind
add = TRUE,
axes = FALSE)
# Add stripchart
stripchart(df$Wind,  # Make sure to use the correct column name
method = "jitter",  # Helps to avoid overlapping points
vertical = FALSE,
add = TRUE,
at = max(df$Wind) * 1.1)  # Same 'at' value as boxplot for alignment
dev.off()
boxplot(df$Wind,
horizontal = TRUE,
at = max(df$Wind) * 1.1,  # Assuming at is set to slightly more than the max value of Wind
add = TRUE,
axes = FALSE)
stripchart(df$Wind,  # Make sure to use the correct column name
method = "jitter",  # Helps to avoid overlapping points
vertical = FALSE,
add = TRUE,
at = max(df$Wind) * 1.1)  # Same 'at' value as boxplot for alignment
hist(df$Wind,
col = "blue",
main = "Wind Histogram",
breaks = 15,
xlab = "Wind", ylab = "Frequency")  # Note: xlab and ylab were swapped in your original code
# Add boxplot
boxplot(df$Wind,
horizontal = TRUE,
at = max(df$Wind) * 1.1,  # Assuming at is set to slightly more than the max value of Wind
add = TRUE,
axes = FALSE)
# Add stripchart
stripchart(df$Wind,  # Make sure to use the correct column name
method = "jitter",  # Helps to avoid overlapping points
vertical = FALSE,
add = TRUE,
at = max(df$Wind) * 1.1)  # Same 'at' value as boxplot for alignment
boxplot(df$Wind,
horizontal = TRUE,
at = max(df$Wind) * 1.1,  # Assuming at is set to slightly more than the max value of Wind
add = TRUE,
axes = FALSE)
hist(df$Wind,
col = "blue",
main = "Wind Histogram",
breaks = 15,
xlab = "Wind", ylab = "Frequency")
df <- airquality
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
breaks = 15,
xlab = "frequency", ylab = "Wind")
dev.off()
pdf(file = "histogram_wind_plot.pdf",
width = 8, height = 6)
hist(df$Wind,
col = "blue",
main = "Wind histogram",
breaks = 10,
xlab = "frequency", ylab = "Wind")
dev.off()
qqnorm(df$Ozone)
qqnorm(df$Ozone)
qqnorm(df)
df$Ozone
qqnorm(df$Ozone)
qqnorm(df$Ozone,
main="Normal Q-Q Plot of the Leaf Biomass",
xlab="Theoretical Quantiles of the Leaf Biomass",
ylab="Sample Quantiles of the Leaf Biomass")
#Plotting-----------------------------------------------------------------------
df <- airquality
qqnorm(df$Ozone)
#Statistics-----------------------------------------------------------------------
set.seed(1)
?set.seed()
set.seed(1)
y = rnorm(100)
prob_y = pnorm(y)
hist(y)
hist(y)
y = rnorm(100, mean = 0, sd = 1)
df = data.frame(y)
y
prob_y
hist(prob_y)
hist(prob_y)
set.seed(1)
y = rnorm(100, mean = 0, sd = 1)
prob_y = pnorm(y)
hist(prob_y)
hist(y)
hist(y, breaks = 10)
hist(y, breaks = 5)
hist(y, breaks = 100)
y = rnorm(100000, mean = 0, sd = 1)
prob_y = pnorm(y)
hist(y, breaks = 100)
x <- seq(-4, 8, lenght = 1000)
density <- dnorm(x, mean = 2, sd = 1)
plot(x, density, type = "l", lwd = 1)
x <- seq(-4, 8, lenght = 100000)
density <- dnorm(x, mean = 2, sd = 1)
plot(x, density, type = "l", lwd = 1)
x <- seq(-4, 8, lenght = 1000)
density <- dnorm(x, mean = 2, sd = 1)
plot(x, density, type = "l", lwd = 1)
x <- seq(-4, 8, length = 1000)
density <- dnorm(x, mean = 2, sd = 1)
plot(x, density, type = "l", lwd = 1)
y <- rnorm(100000, mean = 2, sd = 1)
hist(y,
freq = false,
col = "cyan",)
y <- rnorm(100000, mean = 2, sd = 1)
hist(y,
freq = FALSE,
col = "cyan",)
curve(dnorm(x, mean = 2, sd = 1),
add = TRUE,
col = "red")
y <- rnorm(100000, mean = 2, sd = 1)
hist(y,
freq = TRUE,
col = "cyan",)
curve(dnorm(x, mean = 2, sd = 1),
add = TRUE,
col = "red")
y <- rnorm(100000, mean = 2, sd = 1)
hist(y,
freq = FALSE,
col = "cyan",)
curve(dnorm(x, mean = 2, sd = 1),
add = TRUE,
col = "red")
abline(height = 10)
abline(h = 10)
abline(h = 0.1)
hist(y,
freq = FALSE,
col = "cyan",
breaks = 100)
y <- rnorm(100000, mean = 2, sd = 1)
hist(y,
freq = FALSE,
col = "cyan",
breaks = 100)
curve(dnorm(x, mean = 2, sd = 1),
add = TRUE,
col = "red")
x <- seq(-4, 8, length = 1000)
density_1 <- dnorm(x, mean = 0, sd = 1)
density_2 <- dnorm(x, mean = 2, sd = 1)
plot(x, density_1,
type = "l",
lwd = 1)
plot(x, density_1,
type = "l",
lwd = 2)
curve(dnorm(x, mean = 2, sd = 1, add = TRUE, col = "red"))
curve(dnorm(x, mean = 2, sd = 1), add = TRUE, col = "red")
curve(dnorm(x, mean = 2, sd = 1), add = TRUE, col = "red", lwd = 2)
curve(rnorm(x, mean = 2, sd = 1), add = TRUE, col = "red", lwd = 2)
curve(dnorm(x, mean = 2, sd = 1), add = TRUE, col = "red", lwd = 2)
curve(dnorm(x, mean = 2, sd = 1), add = TRUE, col = "red", lwd = 2)
x <- seq(-4, 8, length = 1000)
density_1 <- dnorm(x, mean = 0, sd = 1)
density_2 <- dnorm(x, mean = 2, sd = 1)
plot(x, density_1,
type = "l",
lwd = 2)
curve(dnorm(x, mean = 2, sd = 1), add = TRUE, col = "red", lwd = 2)
#Regression
df <- mtcars
View(df)
x <- seq(-4, 8, length = 1000)
x <- seq(-4, 8, length = 1000)
x
#Regression
df <- mtcars
model_simple <- lm(mpg ~ wt, data = df)
summary(model_simple)
plot(df$mpg ~ df$wt)
abline(lm(df$mpg ~ df$wt))
summary(model_simple)
model_simple
plot(df$wt ~ df$mpg)
abline(lm(df$mpg ~ df$wt))
abline(lm(df$wt ~ df$mpg))
plot(df$wt ~ df$mpg)
abline(lm(df$wt ~ df$mpg))
read.xlsx("SouvenirSales.xlsx")
read_excel("SouvenirSales.xlsx")
Read_excel("SouvenirSales.xlsx")
read_excel("SouvenirSales.xlsx")
library(readxl)
read_excel("SouvenirSales.xlsx")
Souvenir_Sales <- "SouvenirSales.xlsx"
df <- data.frame(s)
df <- data.frame("SouvenirSales.xlsx")
View(df)
df <- read_excel("SouvenirSales.xlsx")
View(df)
SouvenirSales <- df[ , 1:2]
View(SouvenirSales)
plot(SouvenirSales)
SouvenirSales
Simple_model <- lm(date ~ sales, data = df)
Simple_model <- lm(Date ~ Sales, data = df)
plot(simple_model)
plot(Simple_model)
plot(SouvenirSales$Date ~ SouvenirSales$Sales)
plot(SouvenirSales$Sales ~ SouvenirSales$Date)
df <- read_excel("SouvenirSales.xlsx")
View(SouvenirSales)
